#!/bin/bash
#
# ipop    Start and stop ipop.

# chkconfig: 5 99 01
# description: ipop
# processname: ipop-tincan
# processname: gvpn_controller.py

### BEGIN INIT INFO
# Provides: ipop
# Required-Start: network
# Required-Stop: network
# Default-Start:
# Default-Stop: 0 1 6
# Short-Description: Start and stop ipop
# Description: An open-source user-centric allowing end users to define and create their own virtual private networks (VPNs)
### END INIT INFO

. /etc/rc.d/init.d/functions

INSTDIR=/opt/ipop
LOGDIR=/var/log/ipop
CONFIG_FILE=$INSTDIR/etc/config.json

start() {
        echo -n "Starting ipop: "

        if [ ! -f "$INSTDIR/etc/config.json" ]; then
          # fresh startup; IPOP needs to be initialized

          if [ ! -f "$INSTDIR/etc/ipopserver.info" ]; then
            echo "Error, $INSTDIR/etc/ipopserver.info not found; unable to configure IPOP" >&2
            failure "ipop start"
            return 1
          fi

          # determine ipop server vs client
          . $INSTDIR/etc/ipopserver.info 
          this_host=`hostname`
          this_ip=`host $this_host | cut -f 4 -d' '`
          if [ "$this_ip" == "$xmpp_host" ]; then
            # if server, correct info already exists
            echo "Configuring IPOP server"
          else 
            # if client, need to get ipop ip 
            echo "Configuring IPOP client"
            ipop_ip=`wget -q -O - http://$xmpp_host/ipop/ip.php`
            echo "ip4=$ipop_ip" >> $INSTDIR/etc/ipopserver.info
          fi
          $INSTDIR/bin/updateConfJson 
        fi

        $INSTDIR/bin/start-gvpn 

        RETVAL=0
        if [ -s "$LOGDIR/ipop-tincan.err" ]; then
          failure "ipop-tincan start"
          RETVAL=1
        elif [ -s "$LOGDIR/ipop-gvpn.log" ]; then
          failure "ipop-gvpn start"
          RETVAL=1
        else
          success "ipop start"
          touch /var/lock/subsys/ipop
        fi
      
        echo
        return $RETVAL
}

stop() {
        echo -n "Shutting down ipop: "

        $INSTDIR/bin/stop-gvpn 
        RETVAL=$?
        if [ $? -eq 0 ]; then
          success "ipop stop"
          rm -f /var/lock/subsys/ipop
        else 
          failure "ipop stop"
        fi

        echo
        return $RETVAL
}

restart() {
        stop
	sleep 5
        start
}

# See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart)
        restart
        ;;
  *)
        echo "Usage: ipop {start|stop|restart}"
        exit 2
esac

exit $?


